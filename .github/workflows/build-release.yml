name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Build for ${{ matrix.archEntry.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk_url_path: [
          "https://downloads.openwrt.org/snapshots/targets",
          "https://downloads.openwrt.org/releases/24.10.2/targets"
        ]
        archEntry: [
          { 
            arch: x86_64,
            sdk_path: /x86/64
          },
          { 
            arch: aarch64_cortex-a53,
            sdk_path: /bcm27xx/bcm2710
          },
          { 
            arch: aarch64_cortex-a72,
            sdk_path: /mvebu/cortexa72
          },
          { 
            arch: aarch64_generic,
            sdk_path: /layerscape/armv8_64b
          },
          { 
            arch: arm_arm1176jzf-s_vfp,
            sdk_path: /bcm27xx/bcm2708
          },
          { 
            arch: arm_cortex-a15_neon-vfpv4,
            sdk_path: /ipq806x/generic
          },
          { 
            arch: arm_cortex-a5-vfpv4,
            sdk_path: /at91/sama5
          },
          { 
            arch: arm_cortex-a7_neon-vfpv4,
            sdk_path: /bcm27xx/bcm2709
          },
          { 
            arch: arm_cortex-a8_vfpv3,
            sdk_path: /sunxi/cortexa8
          },
          { 
            arch: arm_cortex-a9,
            sdk_path: /bcm53xx/generic
          },
          { 
            arch: arm_cortex-a9_neon,
            sdk_path: /imx/cortexa9
          },
          { 
            arch: arm_cortex-a9_vfpv3-d16,
            sdk_path: /mvebu/cortexa9
          },
          { 
            arch: arm_fa526,
            sdk_path: /gemini/generic
          },
          { 
            arch: arm_xscale,
            sdk_path: /kirkwood/generic
          },
          { 
            arch: i386_pentium,
            sdk_path: /x86/legacy
          },
          { 
            arch: i386_pentium4,
            sdk_path: /x86/generic
          },
          { 
            arch: mips64_octeonplus,
            sdk_path: /octeon/generic
          },
          { 
            arch: mipsel_24kc,
            sdk_path: /ramips/mt7620
          },
          { 
            arch: mipsel_24kc_24kf,
            sdk_path: /pistachio/generic
          },
          { 
            arch: mipsel_74kc,
            sdk_path: /bcm47xx/mips74k
          },
          { 
            arch: mipsel_mips32,
            sdk_path: /bcm47xx/generic
          },
          { 
            arch: mips_24kc,
            sdk_path: /ath79/generic
          },
          { 
            arch: armeb_xscale,
            sdk_path: /ixp4xx/generic
          },
          { 
            arch: powerpc_464fp,
            sdk_path: /apm821xx/nand
          }
        ]
    env:
      SDK_NAME: -sdk-
      ARCH: ${{ matrix.archEntry.arch }}
      CACHE_DIR: ~/cache
    steps:
      - name: set env
        run: echo "SDK_URL_PATH=${{ matrix.sdk_url_path }}${{ matrix.archEntry.sdk_path }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:release:cache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:cache:

      - name: Setup CCache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:release:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-v2ray:${{ env.ARCH }}:ccache:

      - name: Install Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install -yq gettext libncurses5-dev rsync xsltproc

      - name: Prepare For Build
        run: |
          sdk_home="$(mktemp -d)"

          test -d ~/.ccache || mkdir -p ~/.ccache
          ln -sf ~/.ccache "$sdk_home/.ccache"

          echo "SDK_HOME=$sdk_home" >> $GITHUB_ENV
          echo "CONFIG_CCACHE=y" >> $GITHUB_ENV

      - name: Build package
        env:
          OPENWRT_GOLANG_COMMIT: ${{ secrets.OPENWRT_GOLANG_COMMIT }}
        run: sh compile.sh

      - name: Show CCache Status
        run: |
          eval "${{ env.SDK_HOME }}/staging_dir/host/bin/ccache -s"

      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.ipk
            *.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Release Publish
    runs-on: ubuntu-latest
    env:
      TRIGGER_URL: ${{ secrets.TRIGGER_URL }}
      TRIGGER_TOKEN: ${{ secrets.TRIGGER_TOKEN }}
    needs: release
    steps:
      - name: Notify Jenkins
        run: |
          if [ -z "$TRIGGER_URL" ] ; then
            echo "::warning::No trigger url found, skip..."
            exit 0
          fi
          curl -X POST \
              -H "Content-Type: application/json; charset=utf-8" \
              -H "Authorization: Bearer $TRIGGER_TOKEN" \
              -d "{\"event\":\"release\",\"repository\":\"${{ github.repository }}\",\"ref\":\"${{ github.ref }}\"}" \
              "$TRIGGER_URL" || true
